package code_wars.fifth_kyu;

import org.junit.jupiter.api.Test;
import java.math.BigInteger;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class PerimeterOfSquaresTest {

    @Test
    public void test1() {
        assertEquals(BigInteger.valueOf(80), PerimeterOfSquares.perimeter(BigInteger.valueOf(5)));
    }

    @Test
    public void test2() {
        assertEquals(BigInteger.valueOf(216), PerimeterOfSquares.perimeter(BigInteger.valueOf(7)));
    }

    @Test
    public void test3() {
        assertEquals(BigInteger.valueOf(14098308), PerimeterOfSquares.perimeter(BigInteger.valueOf(30)));
    }

    @Test
    public void test4() {
        assertEquals(
                new BigInteger("15625012761809329110702558221191816339715859887126742040319246461995791011508948997318531753084139472830135002500539730130513286612226231053506370422813480223190070054142319724197314143478352864626593009779772249490313491013775485536026041346537395805560492876053499528942397936361849828114110755943898438811336911910305452240012997503325228745317869074739413428856582419959580313541333216681455045560271111983244772211146141414424719792688341707728198283939747785969536768264995603782094579934174252211015880150866756201403829428080501483167585971095143850733974129873243003414804894802429851899703354385784385191594665634056612978061286739876764521741005778938868067633385310179513118921775927206505200916325133274623950574748654784727385139808017300175051212507831253014573181166765498646513540879951807814949532223173283220932614827051233608007202670855946471676754674060121686453517120317149478070523760345454566315319072776591810322948959839065505960927404671941676974415748182505390387985038693111341995145818877770545153417438092457779608348567607306206386227732099844140567088531766021731945604112892090469225164849759250953049740012244383475643603465616748223727604167944178472834540593918392612023696029959356643249091155066815372451438111341518086556683397076062862982174728935846466713192288397725179190804208199594900201740295816634717377874531627100019300906570675088922029200595657800952789929433753144746029144967277292786268373486456793773727546432932571138147603193968294122727732985802890673021959818140205849558833750339455678976344292519651686312950001465010348109484447574869532243691442511880981189333588939493470161704666235102881850020831771370380575716654055430387863344157174913095122845593598160635276014064660767036393065544707220335723318020861605310470291197104804151365571312112771968793640274238537746723656134889253447596581129416155094242018800232882067453813016399908269689294064077578488942363528092330632741812506031755615710595503099827842774257800805489737192089545704676953775985961971373166259020061145271194106266620171953786954449713149605786850382151438069080059160737698434238648449899292373988358070714076485173621187348589438460309846132936089402167644987851679387949483821933614455519506986898779124521078094528201442438037928811948189838877609624325948757231746446790329680380237520372023142481620595025886586424527988111538187811255652794799282875971331931462019146497367409677127854165064978832061365411567943467940112952597958485384244061803040565779429895386722518561241868740647033502979680037896324684589824696905864716171438370983650098800477838190251243857456155284087320066006099828955674632496847388716383769883074854438072129631806900788928682912813373608249076812117226952539808067456556033659009265606338979048695365628108900801913525439119379138147909285858059696879150105752363476089035272713237813704667776452683906042672914386058371707789636176990540172294502848434386382520575149643401641668028537909097963750704497584619571410227650126610351580119288698101932551539974514534639155053481614587714705702986146094821823561147456377168312924228413467771999029138713452325073332436328142054961001367595787794343402256825347300220654866131095321859745234225472289670353140274724269850897425010799893280162266563570113028666484133341041827975469779730589125408045684576405054191310925789351527186708984712472160954769296019376514630792366226825656410307546939119843001537557807785566358743341515266592379130865649557862637863511770044524269740106898253947235500562334853518552549080587479657114199954892103595904322518982926676160639063705894244527887566294413112690837696932965969987893528435275481569079523906441288076509272563198048606666875262524840090716531821933352314469086699869676028284018316038665813490136306930081752900312688260902419365850052120698420846466319238871092494833742912144348254186687346471888866311829484031098406379997202345987965440236111162983426293313661676769165287791196772578456135600880585745250150538702606172285420648816068422673252339021138051845839301444839674307483055986468355135036373110697604839257681928006553285739073636177012209692399076596606371985830932646971486369658183447025614702729417676072946310194295966004255563294175234320"),
                PerimeterOfSquares.perimeter(BigInteger.valueOf(20285))
        );
    }
}
